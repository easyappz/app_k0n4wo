openapi: 3.0.0
info:
  title: Photo Rating App API
  version: 1.0.0

paths:
  /api/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
                gender:
                  type: string
                  enum: [male, female, other]
                age:
                  type: integer
      responses:
        '201':
          description: User registered successfully
        '500':
          description: Server error

  /api/login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '400':
          description: Invalid credentials
        '500':
          description: Server error

  /api/reset-password-request:
    post:
      summary: Request password reset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        '200':
          description: Password reset link sent
        '404':
          description: User not found
        '500':
          description: Server error

  /api/upload-photo:
    post:
      summary: Upload a new photo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                photoUrl:
                  type: string
      responses:
        '201':
          description: Photo uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  photoId:
                    type: string
        '500':
          description: Server error

  /api/photos-for-rating:
    get:
      summary: Get photos for rating
      parameters:
        - in: query
          name: userId
          schema:
            type: string
        - in: query
          name: gender
          schema:
            type: string
        - in: query
          name: minAge
          schema:
            type: integer
        - in: query
          name: maxAge
          schema:
            type: integer
      responses:
        '200':
          description: List of photos
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                    url:
                      type: string
        '500':
          description: Server error

  /api/rate-photo:
    post:
      summary: Rate a photo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                photoId:
                  type: string
                rating:
                  type: number
      responses:
        '200':
          description: Photo rated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  newAverageRating:
                    type: number
        '404':
          description: Photo not found
        '500':
          description: Server error

  /api/user-points/{userId}:
    get:
      summary: Get user points
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User points
          content:
            application/json:
              schema:
                type: object
                properties:
                  points:
                    type: integer
        '404':
          description: User not found
        '500':
          description: Server error
